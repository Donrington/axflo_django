# Generated by Django 5.2.4 on 2025-08-04 09:56

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('axflo_app', '0005_blogcategory_alter_newsarticle_options_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='AchievementCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('icon', models.CharField(blank=True, help_text='Font Awesome icon class', max_length=50)),
                ('color', models.CharField(default='#007bff', help_text='Hex color code', max_length=7)),
            ],
            options={
                'verbose_name_plural': 'Achievement Categories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='CompanyMilestone',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('milestone_date', models.DateField()),
                ('milestone_year', models.IntegerField()),
                ('icon', models.CharField(blank=True, help_text='Font Awesome icon class', max_length=50)),
                ('image', models.ImageField(blank=True, upload_to='milestones/')),
                ('display_order', models.IntegerField(default=0)),
                ('featured', models.BooleanField(default=False)),
            ],
            options={
                'ordering': ['-milestone_date'],
            },
        ),
        migrations.CreateModel(
            name='ProjectPortfolio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('slug', models.SlugField(blank=True, unique=True)),
                ('client', models.CharField(max_length=200)),
                ('location', models.CharField(max_length=200)),
                ('project_type', models.CharField(choices=[('OIL_SPILL', 'Oil Spill Response'), ('WATER_TREATMENT', 'Water Treatment'), ('ENVIRONMENTAL', 'Environmental Cleanup'), ('MARINE', 'Marine Services'), ('CONSULTANCY', 'Environmental Consultancy'), ('TRAINING', 'Training Program'), ('TECHNOLOGY', 'Technology Implementation')], max_length=20)),
                ('brief_description', models.CharField(help_text='Short description for portfolio grid', max_length=300)),
                ('detailed_description', models.TextField()),
                ('challenge', models.TextField(blank=True, help_text='What challenges did this project address?')),
                ('solution', models.TextField(blank=True, help_text='How did Axflo solve the challenges?')),
                ('results', models.TextField(blank=True, help_text='What were the measurable outcomes?')),
                ('start_date', models.DateField()),
                ('completion_date', models.DateField(blank=True, null=True)),
                ('project_value', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('duration_months', models.IntegerField(blank=True, null=True)),
                ('featured_image', models.ImageField(blank=True, upload_to='portfolio/')),
                ('before_image', models.ImageField(blank=True, upload_to='portfolio/before/')),
                ('after_image', models.ImageField(blank=True, upload_to='portfolio/after/')),
                ('gallery_images', models.JSONField(blank=True, default=list)),
                ('environmental_impact', models.JSONField(blank=True, default=dict, help_text='Environmental metrics achieved')),
                ('key_statistics', models.JSONField(blank=True, default=dict, help_text='Key project statistics')),
                ('status', models.CharField(choices=[('FEATURED', 'Featured'), ('STANDARD', 'Standard'), ('ARCHIVED', 'Archived')], default='STANDARD', max_length=20)),
                ('featured_on_homepage', models.BooleanField(default=False)),
                ('display_order', models.IntegerField(default=0)),
                ('meta_description', models.CharField(blank=True, max_length=160)),
                ('tags', models.CharField(blank=True, help_text='Comma-separated tags', max_length=200)),
                ('view_count', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Project Portfolio',
                'verbose_name_plural': 'Project Portfolio',
                'ordering': ['-completion_date', 'display_order'],
            },
        ),
        migrations.CreateModel(
            name='Achievement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('short_description', models.CharField(blank=True, help_text='Brief description for cards', max_length=300)),
                ('achievement_type', models.CharField(choices=[('AWARD', 'Award'), ('CERTIFICATION', 'Certification'), ('MILESTONE', 'Milestone'), ('RECOGNITION', 'Recognition'), ('PROJECT_SUCCESS', 'Project Success')], default='MILESTONE', max_length=20)),
                ('featured_image', models.ImageField(blank=True, upload_to='achievements/')),
                ('gallery_images', models.JSONField(blank=True, default=list, help_text='List of additional image URLs')),
                ('achievement_date', models.DateField()),
                ('status', models.CharField(choices=[('ACTIVE', 'Active'), ('ARCHIVED', 'Archived')], default='ACTIVE', max_length=20)),
                ('featured', models.BooleanField(default=False, help_text='Feature on homepage/top of achievements')),
                ('impact_metrics', models.JSONField(blank=True, default=dict, help_text="Key metrics (e.g., {'saved_cost': 500000, 'co2_reduced': 1000})")),
                ('external_link', models.URLField(blank=True, help_text='Link to news article or external recognition')),
                ('display_order', models.IntegerField(default=0)),
                ('view_count', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='achievements', to='axflo_app.achievementcategory')),
            ],
            options={
                'ordering': ['-achievement_date', 'display_order'],
            },
        ),
    ]
